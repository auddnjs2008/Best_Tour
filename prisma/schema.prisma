// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  password     String
  name         String
  avatar       String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  tokens       Token[]
  markers      Marker[]
  files        File[]
  recentSearch RecentSearch[]
  posts        Post[]
  replies      Reply[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Marker {
  id        Int      @id @default(autoincrement())
  message   String
  name      String
  color     String
  placeId   String   @unique
  latitude  Float
  longitude Float
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  file      File     @relation(fields: [fileId], references: [id])
  fileId    Int
  imageUrls String
}

model File {
  id      Int      @id @default(autoincrement())
  name    String
  user    User     @relation(fields: [userId], references: [id])
  userId  Int
  markers Marker[]
  info    String
}

model RecentSearch {

  id                  String   @id
  user                User     @relation(fields: [userId], references: [id])
  userId              Int
  address_name        String
  category_group_code String
  category_group_name String
  category_name       String
  distance            String
  phone               String
  place_name          String
  place_url           String
  road_address_name   String
  y                   String
  x                   String
  isMarker            Boolean
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Post {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  Message   String
  placeName String
  address   String
  latitude  String
  longitude String
  imageUrls String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  replies   Reply[]
}

model Reply {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}
